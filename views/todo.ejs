<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f0f0f0;
      }

      .container {
        max-width: 800px;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
      }

      table {
        width: 100%;
        border-collapse: collapse;
      }

      table td {
        padding: 10px;
        border-bottom: 1px solid #ddd;
      }

      a {
        display: inline-block;
        margin: 10px;
        padding: 5px 10px;
        background-color: #333;
        color: #fff;
        text-decoration: none;
        border-radius: 3px;
      }

      a:hover {
        background-color: #555;
      }

      input[type="text"],
      input[type="button"],
      input[type="number"] {
        margin-top: 10px;
        padding: 5px;
        width: 80px;
        font-size: 16px;
        text-align: center;
        border: 1px solid #ddd;
        border-radius: 3px;
        background-color: #fff;
      }

      input[type="button"] {
        background-color: #333;
        color: #fff;
        border: 1px solid #333;
        cursor: pointer;
      }

      input[type="button"]:hover {
        background-color: #555;
        border: 1px solid #555;
      }

      #clock {
        margin-top: 20px;
      }

      #timeBox {
        display: inline-block;
        border: 2px solid #333;
        border-radius: 5px;
        padding: 10px 20px;
      }

      h3 {
        margin: 0;
      }

      #msg {
        font-weight: bold;
        color: red;
        margin-top: 10px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <table>
        <tr>
          <td id="work"><%= work.Title %></td>
        </tr>
        <tr>
          <td id="desc"><%= work.Description %></td>
        </tr>
        <tr>
          <td id="link">
            <a id="child" href="<%= work.Link %>" target="_blank"
              ><%= work.Link %></a
            >
          </td>
        </tr>
      </table>
      <a href="/edit">Edit data</a>
      <a href="/add">Add data</a>
      <a href="/delete">Delete data</a>
      <a href="/next">Next Work</a>
      <a href="/prev">Previous Work</a>
      <a href="/all">All work to do</a>
      <input type="number" id="min" placeholder="Minute" />
      <input type="number" id="sec" placeholder="Second" />
      <input type="button" value="Start" onclick="countdown()" />
      <div id="clock">
        <div id="timeBox">
          <h3>Time Left</h3>
          <input id="displayMin" type="text" placeholder="Minute" />
          <input id="displaySec" type="text" placeholder="Second" />
          <p id="msg"></p>
        </div>
      </div>
    </div>
    <script>
      function countdown() {
        let mins = parseInt(document.getElementById("min").value);
        let secs = parseInt(document.getElementById("sec").value);

        if (isNaN(mins)) {
          mins = 0;
        } else if (isNaN(secs)) {
          secs = 0;
        }

        let totalSecs = mins * 60 + secs;
        let startTime = Date.now();

        let interval = setInterval(() => {
          let elapsedTime = Math.floor((Date.now() - startTime) / 1000);
          let remainingSecs = totalSecs - elapsedTime;

          if (remainingSecs <= 0) {
            clearInterval(interval);
            document.getElementById("min").value = "";
            document.getElementById("sec").value = "";
            document.getElementById("msg").innerHTML = "Time's up!";
            document.getElementById("displayMin").value = "";
            document.getElementById("displaySec").value = "";

            // Send fetch request to next endpoint
            fetch("/next")
              .then((response) => response.json())
              .then((data) => {
                document.getElementById("work").innerText = data.Title;
                document.getElementById("desc").innerText = data.Description;
                document
                  .getElementById("child")
                  .setAttribute("href", data.Link);
                document.getElementById("child").innerText = data.Link;
              })
              .catch((error) => console.error("Error:", error));
          } else {
            let minutes = Math.floor(remainingSecs / 60);
            let seconds = remainingSecs % 60;

            document.getElementById("displayMin").value = String(
              minutes
            ).padStart(2, "0");
            document.getElementById("displaySec").value = String(
              seconds
            ).padStart(2, "0");

            if (remainingSecs < 10) {
              document.getElementById("displayMin").style.color = "red";
              document.getElementById("displaySec").style.color = "red";
              document.getElementById("msg").innerHTML = "Hurry up!";
            } else {
              document.getElementById("displayMin").style.color = "black";
              document.getElementById("displaySec").style.color = "black";
              document.getElementById("msg").innerHTML = "";
            }
          }
        }, 1000); // Adjusted interval based on elapsed time
        mins.innerHTML = "";
        secs.innerHTML = "";
      }
    </script>
  </body>
</html>
